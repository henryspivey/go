{"version":3,"sources":["QuestionBuilder.jsx","SurveyCard.jsx","SurveyApp.jsx","countries.js","Survey.jsx","App.js","serviceWorker.js","index.js"],"names":["QuestionBuilder","props","question","react_default","a","createElement","List","Item","SurveyCard","_id","questions","Card","color","fluid","Content","Meta","map","src_QuestionBuilder","extra","react_router_dom","to","concat","SurveyApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onQuestionChange","idx","e","value","target","state","setState","validateField","fieldName","questionError","optionError","length","validateForm","disabled","onSubmit","_this$state","votes","axios","post","headers","Content-Type","then","res","getSurveys","catch","error","console","log","options","text","selected","get","data","surveys","addQuestion","toConsumableArray","addOption","push","handleOptionChange","optionIdx","newOptions","option","i","objectSpread","_this2","_this$state2","Fragment","Header","as","Form","Field","Input","required","type","name","onChange","placeholder","label","inline","key","Button","icon","labelPosition","onClick","content","Message","visible","header","textAlign","Grid","Row","Segment","Group","item","index","src_SurveyCard","assign","Component","countryOptions","flag","Survey","id","match","params","age","country","email","parseInt","validVotes","response","filter","responses","voted","handleRadioChange","_ref","checked","handleInputChange","defineProperty","emailValid","ageValid","isNaN","selectCountry","getSurvey","loading","statistics","dividing","sub","Label","Dropdown","selection","widths","success","App","padded","Column","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd349384.chunk.js","sourcesContent":["import React from 'react'\nimport {List} from \"semantic-ui-react\";\n\n\nconst QuestionBuilder = props => {\n\tconst {question} = props;\t\n\treturn (\n\t\t<List>\n\t    <List.Item>\t    \t\n\t\t\t\t\t{question.question}\n\t\t\t</List.Item>\n\t  </List>\n\t\t\n\t)\n\n}\n\nexport default QuestionBuilder;","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport QuestionBuilder from \"./QuestionBuilder\";\n\nconst SurveyCard = props => {\n\tconst { _id, questions } = props;\n\treturn (\n\t\t<Card color=\"purple\" fluid>\n\t\t\t<Card.Content>\n\t\t\t\t<Card.Meta>Survey {_id}</Card.Meta>\n\t\t\t\t{questions &&\n\t\t\t\t\tquestions.map(question => <QuestionBuilder question={question} />)}\n\t\t\t</Card.Content>\n\t\t\t<Card.Content extra>\n\t\t\t\t<Link to={`/survey/${_id}`}>Take Survey</Link>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\nexport default SurveyCard;\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCard,\r\n\tHeader,\r\n\tForm,\r\n\tSegment,\r\n\tGrid,\r\n\tButton,\r\n\tInput,\r\n\tMessage\r\n} from \"semantic-ui-react\";\r\nimport SurveyCard from \"./SurveyCard\";\r\n\r\nclass SurveyApp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsurveys: [],\r\n\t\t\tquestions: [{ question: \"\", options: [{ text: \"\", selected: false }] }],\r\n\t\t\tvotes: [],\r\n\t\t\tdisabled: false,\r\n\t\t\tquestionError: false,\r\n\t\t\toptionError: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getSurveys();\r\n\t}\r\n\r\n\tonQuestionChange = idx => e => {\r\n\t\tlet value = e.target.value;\r\n\t\tconst questions = this.state.questions;\r\n\t\tquestions[idx].question = value;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tquestions\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.validateField(\"question\", value);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tvalidateField = (fieldName, value) => {\r\n\t\tlet questionError = this.state.questionError;\r\n\t\tlet optionError = this.state.optionError;\r\n\t\tswitch (fieldName) {\r\n\t\t\tcase \"question\":\r\n\t\t\t\tquestionError = value.length < 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"option\":\r\n\t\t\t\toptionError = value.length < 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tquestionError,\r\n\t\t\t\toptionError\r\n\t\t\t},\r\n\t\t\tthis.validateForm\r\n\t\t);\r\n\t};\r\n\r\n\tvalidateForm = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisabled: !this.state.questionError && !this.state.optionError\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = () => {\r\n\t\tlet { questions, votes } = this.state;\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t\"/api/survey\",\r\n\t\t\t\t{\r\n\t\t\t\t\tquestions,\r\n\t\t\t\t\tvotes\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.getSurveys();\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tthis.setState({ question: \"\", options: [{ text: \"\", selected: false }] });\r\n\t};\r\n\r\n\tgetSurveys = () => {\r\n\t\taxios.get(\"/api/survey\").then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: res.data\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\taddQuestion = e => {\r\n\t\tthis.setState({\r\n\t\t\tquestions: [\r\n\t\t\t\t...this.state.questions,\r\n\t\t\t\t{ question: \"\", options: [{ text: \"\", selected: false }] }\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\taddOption = e => {\r\n\t\tconst { questions } = this.state;\r\n\t\tconst questionIdx = e;\r\n\t\tquestions[questionIdx].options.push({ text: \"\", selected: false });\r\n\t\tthis.setState({ questions });\r\n\t};\r\n\r\n\thandleOptionChange = (idx, optionIdx) => e => {\r\n\t\tconst questions = this.state.questions;\r\n\t\tlet value = e.target.value;\r\n\t\t\r\n\t\tif (questions.length > 0) {\t\t\t\r\n\t\t\tconst newOptions = questions && questions[idx].options.map((option, i) => {\r\n\t\t\t\tif (i !== optionIdx) return option;\r\n\t\t\t\treturn { ...option, text: e.target.value };\r\n\t\t\t});\r\n\t\t\tquestions[idx].options = newOptions;\r\n\t\t\tthis.setState({ questions }, () => {\r\n\t\t\t\tthis.validateField(\"option\", value);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { questions, questionError } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header as=\"h2\">Survey App</Header>\r\n\t\t\t\t<Card fluid>\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onQuestionChange(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={question.question}\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question: \"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, optionIdx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field inline key={optionIdx} required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={`Option # ${optionIdx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please enter an option\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange(i, optionIdx)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.addOption(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Add Option\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\tvisible={this.state.questionError || this.state.optionError}\r\n\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\theader={\r\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Invalid Inputs\" />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.addQuestion()}\r\n\t\t\t\t\t\t\t\tcontent=\"Add Question\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card.Content>\r\n\r\n\t\t\t\t\t<Card.Content extra>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.onSubmit}\r\n\t\t\t\t\t\t\tcontent=\"Submit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Header as=\"h2\">Surveys</Header>\r\n\t\t\t\t\t\t<Card.Group>\r\n\t\t\t\t\t\t\t{this.state.surveys.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Header>No surveys yet</Header>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tthis.state.surveys.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<SurveyCard key={item._id} {...item} />\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SurveyApp;\r\n","const countryOptions = [\n  { key: 'be', flag: 'be', text: 'Belgium', value: 'Belgium' },\n  { key: 'fr', flag: 'fr', text: 'France', value: 'France' },\n  { key: 'it', flag: 'it', text: 'Italy', value: 'Italy' },\n  { key: 'us', flag: 'us', text: 'United States', value: 'United States' },\n  { key: 'nl', flag: 'nl', text: 'Netherlands', value: 'Netherlands' }  \n];\n\nexport default countryOptions;\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport countryOptions from \"./countries\";\nimport {\n\tForm,\n\tHeader,\n\tCard,\n\tLabel,\n\tDropdown,\n\tButton,\n\tInput,\n\tMessage\n} from \"semantic-ui-react\";\n\nexport default class Survey extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tstatistics: [],\n\t\t\tcountry: \"\",\n\t\t\tage: 0,\n\t\t\temail: \"\",\n\t\t\tquestions: [],\n\t\t\tageValid: false,\n\t\t\temailValid: false,\n\t\t\tdisabled: true,\n\t\t\tvoted: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tif (id) {\n\t\t\tthis.getSurvey(id);\n\t\t}\n\t}\n\n\tonSubmit = () => {\n\t\tconst { id } = this.props.match.params;\n\t\tlet { age } = this.state;\n\t\tconst { country, email, questions, disabled } = this.state;\n\t\tage = parseInt(age);\n\n\t\tconst validVotes = questions.map(question => {\t\t\t\n\t\t\tif (!disabled) {\n\t\t\t\treturn {\n\t\t\t\t\tquestion: `${question.question}`,\n\t\t\t\t\tresponse:\n\t\t\t\t\t\tquestion.options &&\n\t\t\t\t\t\tquestion.options.filter(option => option.selected === true)\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tif (!disabled) {\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t`/api/survey/${id}/vote`,\n\t\t\t\t\t{\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tcountry,\n\t\t\t\t\t\tage,\n\t\t\t\t\t\tresponses: validVotes\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(response => {\n\t\t\t\t\tthis.setState({ voted: !this.state.voted });\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t};\n\n\thandleRadioChange = ({ target }) => {\n\t\tconst questions = this.state.questions;\n\t\tconst newOptions = questions.map((question, i) => {\t\t\t\n\t\t\tif (question.question !== target.name) return question;\n\t\t\treturn {\n\t\t\t\t...question,\n\t\t\t\toptions: question.options.map(option => {\n\t\t\t\t\tconst checked = option.text === target.value;\n\t\t\t\t\treturn { ...option, selected: checked };\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\n\t\tthis.setState({ questions: newOptions });\n\t};\n\n\thandleInputChange = e => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.setState({ [name]: value }, () => {\n\t\t\tthis.validateField(name, value);\n\t\t});\n\t};\n\n\tvalidateField = (fieldName, value) => {\n\t\tlet emailValid = this.state.emailValid;\n\t\tlet ageValid = this.state.ageValid;\n\n\t\tswitch (fieldName) {\n\t\t\tcase \"email\":\n\t\t\t\temailValid =\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) &&\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i).length > 0;\n\t\t\t\tbreak;\n\t\t\tcase \"age\":\n\t\t\t\tageValid = value > 0 && !isNaN(value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\temailValid,\n\t\t\t\tageValid\n\t\t\t},\n\t\t\tthis.validateForm\n\t\t);\n\t};\n\n\tvalidateForm = () => {\n\t\tthis.setState({ disabled: !this.state.emailValid && !this.state.ageValid });\n\t};\n\n\tselectCountry = (e, data) => {\n\t\tthis.setState({ country: data.value });\n\t};\n\n\tgetSurvey = id => {\n\t\taxios\n\t\t\t.get(`/api/survey/${id}`)\n\t\t\t.then(response => {\n\t\t\t\tconst { questions } = response.data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tif (!this.state.loading) {\n\t\t\tconst {\n\t\t\t\tquestions,\n\t\t\t\tcountry,\n\t\t\t\tage,\n\t\t\t\temail,\n\t\t\t\temailValid,\n\t\t\t\tageValid,\n\t\t\t\tdisabled,\n\t\t\t\tvoted\n\t\t\t} = this.state;\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Card fluid>\n\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h2\" textAlign=\"left\" dividing>\n\t\t\t\t\t\t\t\t\t\t\t{question.question}\n\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t{question.options &&\n\t\t\t\t\t\t\t\t\t\t\tquestion.options.map((option, optionIdx) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Header sub textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={question.question}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.selected}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<Label>Choose your country</Label>\n\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Country\"\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\toptions={countryOptions}\n\t\t\t\t\t\t\t\t\t\tonChange={this.selectCountry}\n\t\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your age?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your email?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={disabled}\n\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Invalid Inputs\" />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={voted}\n\t\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\t\t\t\tas=\"h3\"\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"left\"\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Thanks for voting!\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"You're all set.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" content=\"Vote\" disabled={disabled} />\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <p>Loading ... </p>;\n\t\t}\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid } from \"semantic-ui-react\";\nimport SurveyApp from \"./SurveyApp\";\nimport Survey from './Survey';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  return (    \n    <Grid padded>\n    \t<Grid.Row>\n    \t<Grid.Column>\t      \n        <Router>\n\t        <Switch>\n\t          <Route exact path='/' component={SurveyApp} />\n\t          <Route path='/survey/:id' component={Survey} />\n\t        </Switch>\n      \t</Router>  \n      </Grid.Column>\t    \n      </Grid.Row>      \n    </Grid>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}