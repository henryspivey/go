{"version":3,"sources":["QuestionBuilder.jsx","SurveyCard.jsx","GeneralError.jsx","SurveyApp.jsx","countries.js","Survey.jsx","App.js","serviceWorker.js","index.js"],"names":["QuestionBuilder","props","question","react_default","a","createElement","List","Item","SurveyCard","_id","questions","index","Card","color","fluid","Content","Header","textAlign","concat","Meta","map","i","src_QuestionBuilder","key","extra","react_router_dom","to","className","GeneralError","visible","Message","error","header","as","content","SurveyApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onQuestionChange","idx","e","value","target","state","setState","validateField","fieldName","questionError","optionError","length","validateForm","disabled","onSubmit","_this$state","votes","generalError","axios","post","headers","Content-Type","then","res","getSurveys","catch","options","text","selected","get","data","surveys","addQuestion","toConsumableArray","addOption","push","handleOptionChange","optionIdx","newOptions","option","objectSpread","_this2","_this$state2","Fragment","Form","Field","Input","required","type","name","onChange","placeholder","label","inline","Button","icon","labelPosition","onClick","src_GeneralError","Grid","Row","Group","item","src_SurveyCard","assign","Component","countryOptions","flag","Survey","id","match","params","age","country","email","voted","parseInt","validVotes","response","filter","responses","handleRadioChange","_ref","checked","handleInputChange","defineProperty","emailValid","ageValid","countryValid","parsed","isNaN","selectCountry","getSurvey","loading","statistics","dividing","sub","Label","Dropdown","selection","widths","success","App","padded","Column","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd31cb27.chunk.js","sourcesContent":["import React from \"react\";\nimport { List } from \"semantic-ui-react\";\n\nconst QuestionBuilder = props => {\n\tconst { question } = props;\n\treturn (\n\t\t<List>\n\t\t\t<List.Item>{question.question}</List.Item>\n\t\t</List>\n\t);\n};\n\nexport default QuestionBuilder;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport QuestionBuilder from \"./QuestionBuilder\";\n\n\nconst SurveyCard = props => {\t\n\tconst { _id, questions, index } = props;\n\treturn (\n\t\t<Card color=\"purple\" fluid>\n\t\t\t<Card.Content>\n\t\t\t\t<Card.Header textAlign=\"left\">{`Survey #${index + 1}`}</Card.Header>\n\t\t\t\t<Card.Meta>Survey {_id}</Card.Meta>\n\t\t\t\t{questions &&\n\t\t\t\t\tquestions.map((question,i) => <QuestionBuilder key={i} question={question} />)}\n\t\t\t</Card.Content>\n\t\t\t<Card.Content extra>\n\t\t\t\t<Link to={`/survey/${_id}`}>\n\t\t\t\t\t<p className=\"surveylink\">Take Survey</p>\n\t\t\t\t</Link>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\nexport default SurveyCard;\n","import React, { Component } from \"react\";\nimport { Message, Header } from \"semantic-ui-react\";\n\nconst GeneralError = props => {\n\tconst { visible } = props;\n\treturn (\n\t\t<Message\n\t\t\tvisible={visible}\n\t\t\terror\n\t\t\theader={<Header as=\"h3\" textAlign=\"left\" content=\"There was an error\" />}\n\t\t\tcontent=\"Please try again.\"\n\t\t/>\n\t);\n};\n\nexport default GeneralError;\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCard,\r\n\tHeader,\r\n\tForm,\r\n\tGrid,\r\n\tButton,\r\n\tInput,\r\n\tMessage\r\n} from \"semantic-ui-react\";\r\nimport SurveyCard from \"./SurveyCard\";\r\nimport GeneralError from \"./GeneralError\";\r\n\r\nclass SurveyApp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsurveys: [],\r\n\t\t\tquestions: [{ question: \"\", options: [{ text: \"\", selected: false }] }],\r\n\t\t\tvotes: [],\r\n\t\t\tdisabled: false,\r\n\t\t\tquestionError: false,\r\n\t\t\toptionError: false,\r\n\t\t\tgeneralError: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getSurveys();\r\n\t}\r\n\r\n\tonQuestionChange = idx => e => {\r\n\t\tlet value = e.target.value;\r\n\t\tconst questions = this.state.questions;\r\n\t\tquestions[idx].question = value;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tquestions\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.validateField(\"question\", value);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tvalidateField = (fieldName, value) => {\r\n\t\tlet questionError = this.state.questionError;\r\n\t\tlet optionError = this.state.optionError;\r\n\t\tswitch (fieldName) {\r\n\t\t\tcase \"question\":\r\n\t\t\t\tquestionError = value.length < 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"option\":\r\n\t\t\t\toptionError = value.length < 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tquestionError,\r\n\t\t\t\toptionError\r\n\t\t\t},\r\n\t\t\tthis.validateForm\r\n\t\t);\r\n\t};\r\n\r\n\tvalidateForm = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisabled: !this.state.questionError && !this.state.optionError\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = () => {\r\n\t\tlet { questions, votes, generalError } = this.state;\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t\"/api/survey\",\r\n\t\t\t\t{\r\n\t\t\t\t\tquestions,\r\n\t\t\t\t\tvotes\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.getSurveys();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ generalError: !generalError });\r\n\t\t\t});\r\n\t\tthis.setState({ question: \"\", options: [{ text: \"\", selected: false }] });\r\n\t};\r\n\r\n\tgetSurveys = () => {\r\n\t\taxios.get(\"/api/survey\").then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: res.data\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\taddQuestion = e => {\r\n\t\tthis.setState({\r\n\t\t\tquestions: [\r\n\t\t\t\t...this.state.questions,\r\n\t\t\t\t{ question: \"\", options: [{ text: \"\", selected: false }] }\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\taddOption = e => {\r\n\t\tconst { questions } = this.state;\r\n\t\tconst questionIdx = e;\r\n\t\tquestions[questionIdx].options.push({ text: \"\", selected: false });\r\n\t\tthis.setState({ questions });\r\n\t};\r\n\r\n\thandleOptionChange = (idx, optionIdx) => e => {\r\n\t\tconst questions = this.state.questions;\r\n\t\tlet value = e.target.value;\r\n\r\n\t\tif (questions.length > 0) {\r\n\t\t\tconst newOptions =\r\n\t\t\t\tquestions &&\r\n\t\t\t\tquestions[idx].options.map((option, i) => {\r\n\t\t\t\t\tif (i !== optionIdx) return option;\r\n\t\t\t\t\treturn { ...option, text: e.target.value };\r\n\t\t\t\t});\r\n\t\t\tquestions[idx].options = newOptions;\r\n\t\t\tthis.setState({ questions }, () => {\r\n\t\t\t\tthis.validateField(\"option\", value);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { questions, questionError, optionError, generalError } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header as=\"h2\">Survey App</Header>\r\n\t\t\t\t<Card fluid>\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onQuestionChange(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={question.question}\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question: \"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, optionIdx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field inline key={optionIdx} required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={`Option # ${optionIdx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please enter an option\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange(i, optionIdx)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.addOption(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Add Option\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\tvisible={questionError || optionError}\r\n\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\theader={\r\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Invalid Inputs\" />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t<GeneralError visible={generalError} />\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.addQuestion()}\r\n\t\t\t\t\t\t\t\tcontent=\"Add Question\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card.Content>\r\n\r\n\t\t\t\t\t<Card.Content extra>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.onSubmit}\r\n\t\t\t\t\t\t\tcontent=\"Submit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Header as=\"h2\">Surveys</Header>\r\n\t\t\t\t\t<Card.Group>\r\n\t\t\t\t\t\t{this.state.surveys.length === 0 ? (\r\n\t\t\t\t\t\t\t<Header>No surveys yet</Header>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\tthis.state.surveys.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<SurveyCard key={item._id} {...item} index={index} />\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Card.Group>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SurveyApp;\r\n","const countryOptions = [\n\t{ key: \"be\", flag: \"be\", text: \"Belgium\", value: \"Belgium\" },\n\t{ key: \"fr\", flag: \"fr\", text: \"France\", value: \"France\" },\n\t{ key: \"it\", flag: \"it\", text: \"Italy\", value: \"Italy\" },\n\t{ key: \"us\", flag: \"us\", text: \"United States\", value: \"United States\" },\n\t{ key: \"nl\", flag: \"nl\", text: \"Netherlands\", value: \"Netherlands\" }\n];\n\nexport default countryOptions;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport countryOptions from \"./countries\";\n\nimport {\n\tForm,\n\tHeader,\n\tCard,\n\tLabel,\n\tDropdown,\n\tButton,\n\tInput,\n\tMessage\n} from \"semantic-ui-react\";\nimport GeneralError from \"./GeneralError\";\n\nexport default class Survey extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tstatistics: [],\n\t\t\tcountry: \"\",\n\t\t\tage: 0,\n\t\t\temail: \"\",\n\t\t\tquestions: [],\n\t\t\tageValid: false,\n\t\t\temailValid: false,\n\t\t\tcountryValid: false,\n\t\t\tdisabled: true,\n\t\t\tvoted: false,\n\t\t\tgeneralError: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tif (id) {\n\t\t\tthis.getSurvey(id);\n\t\t}\n\t}\n\n\tonSubmit = () => {\n\t\tconst { id } = this.props.match.params;\n\t\tlet { age } = this.state;\n\t\tconst {\n\t\t\tcountry,\n\t\t\temail,\n\t\t\tquestions,\n\t\t\tdisabled,\n\t\t\tvoted,\n\t\t\tgeneralError\n\t\t} = this.state;\n\t\tage = parseInt(age);\n\n\t\tconst validVotes = questions.map(question => {\n\t\t\tif (!disabled) {\n\t\t\t\treturn {\n\t\t\t\t\tquestion: `${question.question}`,\n\t\t\t\t\tresponse:\n\t\t\t\t\t\tquestion.options &&\n\t\t\t\t\t\tquestion.options.filter(option => option.selected === true)\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tif (!voted) {\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t`/api/survey/${id}/vote`,\n\t\t\t\t\t{\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tcountry,\n\t\t\t\t\t\tage,\n\t\t\t\t\t\tresponses: validVotes\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(response => {\n\t\t\t\t\tthis.setState({ voted: !voted });\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tthis.setState({ generalError: !generalError });\n\t\t\t\t});\n\t\t}\n\t};\n\n\thandleRadioChange = ({ target }) => {\n\t\tconst questions = this.state.questions;\n\t\tconst newOptions = questions.map((question, i) => {\n\t\t\tif (question.question !== target.name) return question;\n\t\t\treturn {\n\t\t\t\t...question,\n\t\t\t\toptions: question.options.map(option => {\n\t\t\t\t\tconst checked = option.text === target.value;\n\t\t\t\t\treturn { ...option, selected: checked };\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\n\t\tthis.setState({ questions: newOptions });\n\t};\n\n\thandleInputChange = e => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.setState({ [name]: value }, () => {\n\t\t\tthis.validateField(name, value);\n\t\t});\n\t};\n\n\tvalidateField = (fieldName, value) => {\n\t\tlet emailValid = this.state.emailValid;\n\t\tlet ageValid = this.state.ageValid;\n\t\tlet countryValid = this.state.countryValid;\n\n\t\tswitch (fieldName) {\n\t\t\tcase \"email\":\n\t\t\t\temailValid =\n\t\t\t\t\tvalue.length > 0 &&\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) &&\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i).length > 0;\n\t\t\t\tbreak;\n\t\t\tcase \"age\":\n\t\t\t\tconst parsed = parseInt(value);\n\t\t\t\tageValid = parsed > 0 && !isNaN(parsed);\n\t\t\t\tbreak;\n\t\t\tcase \"country\":\n\t\t\t\tcountryValid = value.length > 0;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\temailValid,\n\t\t\t\tageValid,\n\t\t\t\tcountryValid\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.validateForm(emailValid, ageValid, countryValid);\n\t\t\t}\n\t\t);\n\t};\n\n\tvalidateForm = (emailValid, ageValid, countryValid) => {\n\t\tthis.setState({ disabled: emailValid && ageValid && countryValid });\n\t};\n\n\tselectCountry = (e, data) => {\n\t\tlet value = data.value;\n\t\tthis.setState({ country: value }, () =>\n\t\t\tthis.validateField(\"country\", value)\n\t\t);\n\t};\n\n\tgetSurvey = id => {\n\t\tconst { generalError } = this.state;\n\t\taxios\n\t\t\t.get(`/api/survey/${id}`)\n\t\t\t.then(response => {\n\t\t\t\tconst { questions } = response.data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tthis.setState({ generalError: !generalError });\n\t\t\t});\n\t};\n\n\trender() {\n\t\tif (!this.state.loading) {\n\t\t\tconst {\n\t\t\t\tquestions,\n\t\t\t\tcountry,\n\t\t\t\tage,\n\t\t\t\temail,\n\t\t\t\tdisabled,\n\t\t\t\tvoted,\n\t\t\t\tgeneralError\n\t\t\t} = this.state;\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Card fluid>\n\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h2\" textAlign=\"left\" dividing>\n\t\t\t\t\t\t\t\t\t\t\t{question.question}\n\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t{question.options &&\n\t\t\t\t\t\t\t\t\t\t\tquestion.options.map((option, optionIdx) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field key={optionIdx}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Header sub textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={question.question}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.selected}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<Label>Choose your country</Label>\n\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Country\"\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\toptions={countryOptions}\n\t\t\t\t\t\t\t\t\t\tonChange={this.selectCountry}\n\t\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your age?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your email?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={true && !disabled}\n\t\t\t\t\t\t\t\t\terror\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Invalid Inputs\" />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={voted}\n\t\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\t\t\t\tas=\"h3\"\n\t\t\t\t\t\t\t\t\t\t\ttextAlign=\"left\"\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Thanks for voting!\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"You're all set.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<GeneralError visible={generalError} />\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcontent=\"Vote\"\n\t\t\t\t\t\t\t\t\tdisabled={!disabled && !voted}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <p>Loading ... </p>;\n\t\t}\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid } from \"semantic-ui-react\";\nimport SurveyApp from \"./SurveyApp\";\nimport Survey from './Survey';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  return (    \n    <Grid padded>\n    \t<Grid.Row>\n    \t<Grid.Column>\t      \n        <Router>\n\t        <Switch>\n\t          <Route exact path='/' component={SurveyApp} />\n\t          <Route exact path='/survey/:id' component={Survey} />\n\t        </Switch>\n      \t</Router>  \n      </Grid.Column>\t    \n      </Grid.Row>      \n    </Grid>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}