{"version":3,"sources":["QuestionBuilder.jsx","SurveyCard.jsx","SurveyApp.jsx","countries.js","Survey.jsx","App.js","serviceWorker.js","index.js"],"names":["QuestionBuilder","props","question","react_default","a","createElement","List","Item","SurveyCard","_id","questions","Card","color","fluid","Content","Meta","map","src_QuestionBuilder","extra","react_router_dom","to","concat","SurveyApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onQuestionChange","idx","e","state","target","value","setState","questionError","onSubmit","_this$state","votes","axios","post","headers","Content-Type","then","res","getSurveys","catch","error","console","log","options","text","selected","get","data","surveys","addQuestion","toConsumableArray","addOption","push","handleOptionChange","optionIdx","newOptions","option","i","optionError","objectSpread","disabled","_this2","Fragment","Header","as","Form","Field","Input","required","type","name","onChange","placeholder","label","inline","key","Button","icon","labelPosition","onClick","content","Message","visible","header","textAlign","Grid","Row","Segment","Group","length","item","index","src_SurveyCard","assign","Component","countryOptions","flag","Survey","id","match","params","age","country","email","parseInt","validVotes","validateOptions","response","filter","responses","voted","handleRadioChange","_ref","checked","handleInputChange","defineProperty","validateField","fieldName","emailValid","ageValid","isNaN","validateForm","selectCountry","getSurvey","loading","statistics","_this$state2","dividing","sub","Label","Dropdown","selection","widths","success","App","padded","Column","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f232379.chunk.js","sourcesContent":["import React from 'react'\nimport {List} from \"semantic-ui-react\";\n\n\nconst QuestionBuilder = props => {\n\tconst {question} = props;\t\n\treturn (\n\t\t<List>\n\t    <List.Item>\t    \t\n\t\t\t\t\t{question.question}\n\t\t\t</List.Item>\n\t  </List>\n\t\t\n\t)\n\n}\n\nexport default QuestionBuilder;","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport QuestionBuilder from \"./QuestionBuilder\";\n\nconst SurveyCard = props => {\n\tconst { _id, questions } = props;\n\treturn (\n\t\t<Card color=\"purple\" fluid>\n\t\t\t<Card.Content>\n\t\t\t\t<Card.Meta>Survey {_id}</Card.Meta>\n\t\t\t\t{questions &&\n\t\t\t\t\tquestions.map(question => <QuestionBuilder question={question} />)}\n\t\t\t</Card.Content>\n\t\t\t<Card.Content extra>\n\t\t\t\t<Link to={`/survey/${_id}`}>Take Survey</Link>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\nexport default SurveyCard;\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCard,\r\n\tHeader,\r\n\tForm,\r\n\tSegment,\r\n\tGrid,\r\n\tButton,\r\n\tInput,\r\n\tMessage\r\n} from \"semantic-ui-react\";\r\nimport SurveyCard from \"./SurveyCard\";\r\n\r\nclass SurveyApp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsurveys: [],\r\n\t\t\tquestions: [{ question: \"\", options: [{ text: \"\", selected: false }] }],\r\n\t\t\tvotes: [],\r\n\t\t\tdisabled: false,\r\n\t\t\tquestionError: false,\r\n\t\t\toptionError: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getSurveys();\r\n\t}\r\n\r\n\tonQuestionChange = idx => e => {\r\n\t\tconst questions = this.state.questions;\r\n\t\tquestions[idx].question = e.target.value;\r\n\t\tif (questions[idx].question === \"\") {\r\n\t\t\tthis.setState({ questionError: !this.state.questionError });\r\n\t\t} \r\n\t\tthis.setState({\r\n\t\t\tquestions\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = () => {\r\n\t\tlet { questions, votes } = this.state;\r\n\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t\"/api/survey\",\r\n\t\t\t\t{\r\n\t\t\t\t\tquestions,\r\n\t\t\t\t\tvotes\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(res => {\r\n\t\t\t\tthis.getSurveys();\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tthis.setState({ question: \"\", options: [{ text: \"\", selected: false }] });\r\n\t};\r\n\r\n\tgetSurveys = () => {\r\n\t\taxios.get(\"/api/survey\").then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: res.data\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\taddQuestion = e => {\r\n\t\tthis.setState({\r\n\t\t\tquestions: [\r\n\t\t\t\t...this.state.questions,\r\n\t\t\t\t{ question: \"\", options: [{ text: \"\", selected: false }] }\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\taddOption = e => {\r\n\t\tconst { questions } = this.state;\r\n\t\tconst questionIdx = e;\r\n\t\tquestions[questionIdx].options.push({ text: \"\", selected: false });\r\n\t\tthis.setState({ questions });\r\n\t};\r\n\r\n\r\n\thandleOptionChange = (idx, optionIdx) => e => {\r\n\t\tconst questions = this.state.questions;\r\n\r\n\t\tconst newOptions = questions[idx].options.map((option, i) => {\r\n\t\t\tif (i !== optionIdx) return option;\r\n\t\t\tif(e.target.value === \"\") {\r\n\t\t\t\tthis.setState({optionError: !this.state.optionError})\r\n\t\t\t}\r\n\t\t\treturn { ...option, text: e.target.value };\r\n\t\t});\r\n\t\tquestions[idx].options = newOptions;\r\n\t\tthis.setState({ questions });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { questions } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header as=\"h2\">Survey App</Header>\r\n\t\t\t\t<Card fluid>\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Input\r\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onQuestionChange(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={question.question}\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question: \"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, optionIdx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field inline key={optionIdx} required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={`Option # ${optionIdx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please enter an option\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange(i, optionIdx)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.addOption(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Add Option\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\t\t\tvisible={this.state.questionError || this.state.optionError}\r\n\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\theader={<Header as='h3' textAlign='left' content=\"Invalid Inputs\"/>}\r\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.addQuestion()}\r\n\t\t\t\t\t\t\t\tcontent=\"Add Question\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card.Content>\r\n\r\n\t\t\t\t\t<Card.Content extra>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.onSubmit}\r\n\t\t\t\t\t\t\tcontent=\"Submit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Header as=\"h2\">Surveys</Header>\r\n\t\t\t\t\t\t<Card.Group>\r\n\t\t\t\t\t\t\t{this.state.surveys.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Header>No surveys yet</Header>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tthis.state.surveys.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<SurveyCard key={item._id} {...item} />\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SurveyApp;\r\n","const countryOptions = [\n  { key: 'be', flag: 'be', text: 'Belgium', value: 'Belgium' },\n  { key: 'fr', flag: 'fr', text: 'France', value: 'France' },\n  { key: 'it', flag: 'it', text: 'Italy', value: 'Italy' },\n  { key: 'us', flag: 'us', text: 'United States', value: 'United States' },\n  { key: 'nl', flag: 'nl', text: 'Netherlands', value: 'Netherlands' }  \n];\n\nexport default countryOptions;\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport countryOptions from \"./countries\";\nimport {\n\tForm,\n\tHeader,\n\tCard,\n\tLabel,\n\tDropdown,\n\tButton,\n\tInput,\n\tMessage\n} from \"semantic-ui-react\";\n\nexport default class Survey extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tstatistics: [],\n\t\t\tcountry: \"\",\n\t\t\tage: 0,\n\t\t\temail: \"\",\n\t\t\tquestions: [],\n\t\t\tageValid: false,\n\t\t\temailValid: false,\n\t\t\tdisabled: true,\n\t\t\tvoted: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tif (id) {\n\t\t\tthis.getSurvey(id);\n\t\t}\n\t}\n\n\tonSubmit = () => {\n\t\tconst { id } = this.props.match.params;\n\t\tlet { age } = this.state;\n\t\tconst { country, email, questions, disabled } = this.state;\n\t\tage = parseInt(age);\n\n\t\tconst validVotes = questions.map(question => {\n\t\t\tthis.validateOptions(question);\n\t\t\tif (!disabled) {\n\t\t\t\treturn {\n\t\t\t\t\tquestion: `${question.question}`,\n\t\t\t\t\tresponse: question.options && question.options\n\t\t\t\t\t\t.filter(option => option.selected === true)\n\t\t\t\t\t\t\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tif (!disabled) {\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t`/api/survey/${id}/vote`,\n\t\t\t\t\t{\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tcountry,\n\t\t\t\t\t\tage,\n\t\t\t\t\t\tresponses: validVotes\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.then(response => {\n\t\t\t\t\tthis.setState({voted: !this.state.voted})\n\t\t\t\t})\n\t\t\t\t.catch(function(error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t};\n\n\thandleRadioChange = ({ target }) => {\n\t\tconst questions = this.state.questions;\n\t\tconst newOptions = questions.map((question, i) => {\n\t\t\tthis.validateOptions(question)\n\t\t\tif (question.question !== target.name) return question;\n\t\t\treturn {\n\t\t\t\t...question,\n\t\t\t\toptions: question.options.map(option => {\n\t\t\t\t\tconst checked = option.text === target.value;\n\t\t\t\t\treturn { ...option, selected: checked };\n\t\t\t\t})\n\t\t\t};\n\t\t\t\n\t\t});\n\n\n\t\tthis.setState({ questions: newOptions });\n\t};\n\n\thandleInputChange = e => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.setState({ [name]: value }, () => {\n\t\t\tthis.validateField(name, value);\n\t\t});\n\t};\n\n\tvalidateField = (fieldName, value) => {\n\t\tlet emailValid = this.state.emailValid;\n\t\tlet ageValid = this.state.ageValid;\n\n\t\tswitch (fieldName) {\n\t\t\tcase \"email\":\n\t\t\t\temailValid =\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i) &&\n\t\t\t\t\tvalue.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i).length > 0;\n\t\t\t\tbreak;\n\t\t\tcase \"age\":\n\t\t\t\tageValid = value > 0 && !isNaN(value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\temailValid: emailValid,\n\t\t\t\tageValid: ageValid\n\t\t\t},\n\t\t\tthis.validateForm\n\t\t);\n\t};\n\n\tvalidateForm = () => {\n\t\tthis.setState({ disabled: !this.state.emailValid && !this.state.ageValid });\n\t};\n\n\tvalidateOptions = question => {\n\t\tconst checked = question.options.filter(option => option.selected === true);\n\t\t\n\t\tif (checked.length === 0) {\n\t\t\tthis.setState({ disabled: !this.state.disabled });\n\t\t}\n\t};\n\n\tselectCountry = (e, data) => {\n\t\tthis.setState({ country: data.value });\n\t};\n\n\tgetSurvey = id => {\n\t\taxios\n\t\t\t.get(`/api/survey/${id}`)\n\t\t\t.then(response => {\n\t\t\t\tconst { questions } = response.data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\trender() {\n\t\tif (!this.state.loading) {\n\t\t\tconst {\n\t\t\t\tquestions,\n\t\t\t\tcountry,\n\t\t\t\tage,\n\t\t\t\temail,\n\t\t\t\temailValid,\n\t\t\t\tageValid,\n\t\t\t\tdisabled,\n\t\t\t\tvoted\n\t\t\t} = this.state;\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Card fluid>\n\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h2\" textAlign=\"left\" dividing>\n\t\t\t\t\t\t\t\t\t\t\t{question.question}\n\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t{question.options &&\n\t\t\t\t\t\t\t\t\t\t\tquestion.options.map((option, optionIdx) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Header sub textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={question.question}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.selected}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<Label>Choose your country</Label>\n\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Country\"\n\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\toptions={countryOptions}\n\t\t\t\t\t\t\t\t\t\tonChange={this.selectCountry}\n\t\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your age?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your email?\"\n\t\t\t\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={disabled}\n\t\t\t\t\t\t\t\t\terror\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Invalid Inputs\" />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"Please check your inputs again. All fields are required.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Message\n\t\t\t\t\t\t\t\t\tvisible={voted}\n\t\t\t\t\t\t\t\t\tsuccess\n\t\t\t\t\t\t\t\t\theader={\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h3\" textAlign=\"left\" content=\"Thanks for voting!\" />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcontent=\"You're all set.\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" content=\"Vote\" disabled={disabled} />\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <p>Loading ... </p>;\n\t\t}\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Grid } from \"semantic-ui-react\";\nimport SurveyApp from \"./SurveyApp\";\nimport Survey from './Survey';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  return (    \n    <Grid padded>\n    \t<Grid.Row>\n    \t<Grid.Column>\t      \n        <Router>\n\t        <Switch>\n\t          <Route exact path='/' component={SurveyApp} />\n\t          <Route path='/survey/:id' component={Survey} />\n\t        </Switch>\n      \t</Router>  \n      </Grid.Column>\t    \n      </Grid.Row>      \n    </Grid>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}