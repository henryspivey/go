{"version":3,"sources":["QuestionBuilder.jsx","SurveyCard.jsx","SurveyApp.jsx","countries.js","Survey.jsx","App.js","serviceWorker.js","index.js"],"names":["QuestionBuilder","props","question","react_default","a","createElement","List","Item","SurveyCard","_id","questions","Card","color","fluid","Content","Meta","map","src_QuestionBuilder","extra","react_router_dom","to","concat","SurveyApp","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onQuestionChange","idx","e","state","target","value","setState","onSubmit","_this$state","votes","axios","post","headers","Content-Type","then","res","getSurveys","catch","error","console","log","options","text","selected","get","data","surveys","addQuestion","toConsumableArray","addOption","push","removeOption","filter","s","sidx","handleOptionChange","optionIdx","newOptions","option","i","objectSpread","disabled","_this2","_this$state2","title","country","region","Fragment","Header","as","Form","Field","Input","type","name","onChange","placeholder","label","inline","key","required","Button","icon","labelPosition","onClick","content","Grid","Row","Segment","Group","length","item","index","src_SurveyCard","assign","Component","countryOptions","flag","Survey","id","match","params","age","email","parseInt","voted","response","reduce","responses","handleRadioChange","_ref","checked","handleInputChange","defineProperty","selectCountry","getSurvey","loading","statistics","textAlign","dividing","sub","Label","Dropdown","selection","widths","App","padded","Column","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90f9143a.chunk.js","sourcesContent":["import React from 'react'\nimport {Card, List} from \"semantic-ui-react\";\n\n\nconst QuestionBuilder = props => {\n\tconst {question} = props;\t\n\treturn (\n\t\t<List>\n\t    <List.Item>\t    \t\n\t\t\t\t\t{question.question}\n\t\t\t</List.Item>\n\t  </List>\n\t\t\n\t)\n\n}\n\nexport default QuestionBuilder;","import React from \"react\";\nimport {\n\tCard,\t\n\tButton,\n\tList\n\n} from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom'\nimport QuestionBuilder from './QuestionBuilder';\n\nconst SurveyCard = props => {\n\tconst {_id, questions} = props;\t\n\treturn (\n\t\t<Card  color=\"purple\" fluid>\n\t\t\t<Card.Content>\n\t\t\t<Card.Meta>Survey {_id}</Card.Meta>\n\t\t\t{questions && questions.map((question) => (\n\t\t\t\t<QuestionBuilder question={question} />\n\t\t\t\t\n\t\t\t\t))}\t\t\t\t\n\t\t\t</Card.Content>\n\t\t\t<Card.Content extra>\n\t\t\t\t<Link to={`/survey/${_id}`}>Take Survey</Link>\n\t\t\t</Card.Content>\n\t\t</Card>\n\t);\n};\n\n\nexport default SurveyCard;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n\tCard,\r\n\tHeader,\r\n\tForm,\r\n\tLabel,\r\n\tSegment,\r\n\tGrid,\r\n\tButton,\r\n\tInput\r\n} from \"semantic-ui-react\";\r\nimport SurveyCard from \"./SurveyCard\";\r\n\r\nclass SurveyApp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\t\t\t\r\n\t\t\tsurveys: [],\r\n\t\t\tquestions: [{ question: \"\", options: [{ text: \"\", selected: false }]}],\t\t\r\n\t\t\tvotes: [],\t\t\t\t\r\n\t\t\tdisabled: false\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getSurveys();\r\n\t}\r\n\r\n\tonQuestionChange = (idx) => e => {\r\n\t\tconst questions = this.state.questions;\r\n\r\n\t\tquestions[idx].question = e.target.value;\r\n\t\tthis.setState({\r\n\t\t\tquestions\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = () => {\r\n\t\tlet { questions, votes } = this.state;\r\n\t\t// const optionsText = options.map(option => option.text);\r\n\t\t// const votes = Array.from({ length: options.length }, () => 0);\r\n\t\taxios\r\n\t\t\t.post(\r\n\t\t\t\t\"/api/survey\",\r\n\t\t\t\t{\r\n\t\t\t\t\tquestions,\r\n\t\t\t\t\tvotes\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t.then(res => {\t\t\t\t\r\n\t\t\t\tthis.getSurveys();\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\tthis.setState({ question: \"\", options: [{ text: \"\", selected: false }] });\r\n\t};\r\n\r\n\tgetSurveys = () => {\t\t\r\n\t\taxios.get(\"/api/survey\").then(res => {\r\n\t\t\tconst data = res.data;\r\n\t\t\tif (data) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: res.data\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tsurveys: []\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\taddQuestion = e => {\r\n\t\tthis.setState({\r\n\t\t\tquestions: [\r\n\t\t\t\t...this.state.questions,\r\n\t\t\t\t{ question: \"\", options: [{ text: \"\", selected: false }] }\r\n\t\t\t]\r\n\t\t});\r\n\t};\r\n\r\n\taddOption = e => {\r\n\t\tconst { questions } = this.state;\r\n\t\tconst questionIdx = e;\r\n\t\tquestions[questionIdx].options.push({ text: \"\", selected: false });\r\n\t\tthis.setState({ questions: questions });\r\n\t};\r\n\r\n\tremoveOption = idx => () => {\r\n\t\tthis.setState({\r\n\t\t\toptions: this.state.options.filter((s, sidx) => idx !== sidx)\r\n\t\t});\r\n\t};\r\n\r\n\thandleOptionChange = (idx, optionIdx) => e => {\r\n\t\tconst questions = this.state.questions;\r\n\r\n\t\tconst newOptions = questions[idx].options.map((option, i) => {\r\n\t\t\tif (i !== optionIdx) return option;\r\n\t\t\treturn { ...option, text: e.target.value };\r\n\t\t});\r\n\t\tquestions[idx].options = newOptions;\r\n\t\tthis.setState({ questions });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { questions, title, options, country, region } = this.state;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header as=\"h2\">Survey App</Header>\r\n\t\t\t\t<Card fluid>\r\n\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.onQuestionChange(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={question.question}\r\n\t\t\t\t\t\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your question\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Question: \"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t{question.options.map((option, optionIdx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field inline key={optionIdx} required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={`Option # ${optionIdx + 1}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Please enter an option\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleOptionChange(i, optionIdx)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.addOption(i)}\r\n\t\t\t\t\t\t\t\t\t\t\tcontent=\"Add Option\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ticon=\"plus\"\r\n\t\t\t\t\t\t\t\tlabelPosition=\"left\"\r\n\t\t\t\t\t\t\t\tonClick={() => this.addQuestion()}\r\n\t\t\t\t\t\t\t\tcontent=\"Add Question\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card.Content>\r\n\r\n\t\t\t\t\t<Card.Content extra>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={this.onSubmit}\r\n\t\t\t\t\t\t\tcontent=\"Submit\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card.Content>\r\n\t\t\t\t</Card>\r\n\r\n\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Header as=\"h2\">Surveys</Header>\r\n\t\t\t\t\t\t<Card.Group>\r\n\t\t\t\t\t\t\t{this.state.surveys.length === 0 ? (\r\n\t\t\t\t\t\t\t\t<Header>No surveys yet</Header>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tthis.state.surveys.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t<SurveyCard key={item._id} {...item} />\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Row>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SurveyApp;\r\n","const countryOptions = [\n  { key: 'be', flag: 'be', text: 'Belgium', value: 'Belgium' },\n  { key: 'fr', flag: 'fr', text: 'France', value: 'France' },\n  { key: 'it', flag: 'it', text: 'Italy', value: 'Italy' },\n  { key: 'us', flag: 'us', text: 'United States', value: 'United States' },\n  { key: 'nl', flag: 'nl', text: 'Netherlands', value: 'Netherlands' }  \n];\n\nexport default countryOptions;\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n\tCountryDropdown,\n\tRegionDropdown,\n\tCountryRegionData\n} from \"react-country-region-selector\";\nimport VoteStatistics from \"./VoteStatistics\";\nimport countryOptions from \"./countries\";\nimport {\n\tForm,\n\tRadio,\n\tStatistic,\n\tHeader,\n\tContainer,\n\tCard,\n\tGrid,\n\tLabel,\n\tDropdown,\n\tButton,\n\tInput\n} from \"semantic-ui-react\";\n\nexport default class Survey extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tstatistics: [],\n\t\t\tcountry: \"\",\n\t\t\tage: 0,\n\t\t\temail: \"\",\n\t\t\tquestions: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { id } = this.props.match.params;\n\t\tif (id) {\n\t\t\tthis.getSurvey(id);\n\t\t}\n\t}\n\n\n\tonSubmit = () => {\n\t\tconst { id } = this.props.match.params;\n\t\tlet { age } = this.state;\n\t\tconst { country, email, questions } = this.state;\n\t\tage = parseInt(age);\n\t\t\n\t\tconst voted = questions.map(question => {\t\t\t\n\t\t\treturn {\n\t\t\t\tquestion: `${question.question}`, \n\t\t\t\tresponse: question.options.filter(option => option.selected === true).reduce(option => option.text)\n\t\t\t};\n\t\t})\n\n\n\t\tconsole.log(voted)\n\t\t\n\t\taxios\n\t\t\t.post(\n\t\t\t\t`/api/survey/${id}/vote`,\n\t\t\t\t{\n\t\t\t\t\temail,\n\t\t\t\t\tcountry,\n\t\t\t\t\tage,\n\t\t\t\t\tresponses: voted\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\t\n\t\t\t\tconsole.log(response.data);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\n\t};\n\n\thandleRadioChange = ({ target }) => {\n\t\tconst questions = this.state.questions;\n\t\tconst newOptions = questions.map((question, i) => {\n\t\t\tif (question.question !== target.name) return question;\n\t\t\treturn {\n\t\t\t\t...question,\n\t\t\t\toptions: question.options.map(option => {\n\t\t\t\t\tconst checked = option.text === target.value;\n\t\t\t\t\treturn { ...option, selected: checked };\n\t\t\t\t})\n\t\t\t};\n\t\t});\n\n\t\tthis.setState({ questions: newOptions });\n\t};\n\n\thandleInputChange = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\tselectCountry = (e, data) =>{\t\t\n\t\tthis.setState({ country: data.value });\n\t};\n\n\tgetSurvey = id => {\n\t\taxios\n\t\t\t.get(`/api/survey/${id}`)\n\t\t\t.then(response => {\n\t\t\t\tconst { questions } = response.data;\n\t\t\t\tthis.setState({\n\t\t\t\t\tquestions,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\n\n\trender() {\n\t\tif (!this.state.loading) {\n\t\t\tconst { questions, statistics, country, age, email } = this.state;\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Card fluid>\n\t\t\t\t\t\t<Card.Content>\n\t\t\t\t\t\t\t<Form onSubmit={this.onSubmit}>\n\t\t\t\t\t\t\t\t{questions.map((question, i) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Header as=\"h2\" textAlign=\"left\" dividing>\n\t\t\t\t\t\t\t\t\t\t\t{question.question}\n\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t{question.options &&\n\t\t\t\t\t\t\t\t\t\t\tquestion.options.map((option, optionIdx) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Header sub textAlign=\"left\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={question.question}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={option.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={option.selected}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleRadioChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t<Label>Choose your country</Label>\n\t\t\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Select Country\"\n\t\t\t\t\t\t\t\t\t\tfluid\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\t\t\t\toptions={countryOptions}\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tonChange={this.selectCountry}\n\t\t\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t<Form.Group widths=\"equal\">\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"age\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={age}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your age?\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"What is your email?\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" content=\"Vote\" />\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Content>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <p>Loading ... </p>;\n\t\t}\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container, Grid } from \"semantic-ui-react\";\nimport SurveyApp from \"./SurveyApp\";\nimport Survey from './Survey';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nfunction App() {\n  return (    \n    <Grid padded>\n    \t<Grid.Row>\n    \t<Grid.Column>\t      \n        <Router>\n\t        <Switch>\n\t          <Route exact path='/' component={SurveyApp} />\n\t          <Route path='/survey/:id' component={Survey} />\n\t        </Switch>\n      \t</Router>  \n      </Grid.Column>\t    \n      </Grid.Row>      \n    </Grid>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}